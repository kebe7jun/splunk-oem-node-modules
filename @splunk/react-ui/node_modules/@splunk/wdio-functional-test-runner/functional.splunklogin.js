'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _intel = require('intel');

var _intel2 = _interopRequireDefault(_intel);

var _url = require('url');

var _lodash = require('lodash');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (config) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$user = _ref.user,
        user = _ref$user === undefined ? 'admin' : _ref$user,
        _ref$password = _ref.password,
        password = _ref$password === undefined ? 'Chang3d!' : _ref$password;

    config.before = config.before ? (0, _lodash.castArray)(config.before) : [];
    config.before.push(function () {
        var isLoginUrl = function isLoginUrl() {
            return (0, _lodash.endsWith)((0, _url.parse)(browser.getUrl()).pathname, 'account/login');
        };
        var detectPasswordChange = function detectPasswordChange() {
            try {
                // sometimes the isVisible call causes errors on sauce (usually on IE11).
                if (browser.isVisible('.account-passwordchange')) {
                    _intel2.default.debug("Detected 'Change password' page, skipping");
                    browser.click('.account-passwordchange-skip a');
                }
            } catch (e) {
                _intel2.default.debug("The 'Change password' detection failed");
            }
        };

        var login = function login() {
            if (isLoginUrl()) {
                // The login page doesn't always require credentials input. Need to wait for
                // the username field to show up or for a redirect away from the page.
                var onLogin = true;
                browser.waitUntil(function () {
                    if (browser.isExisting('input#username')) {
                        return true;
                    }
                    onLogin = isLoginUrl();
                    return !onLogin;
                });

                if (onLogin) {
                    _intel2.default.debug('Current page is account/login, entering credentials and submitting');

                    browser.setValue('input#username', user);
                    browser.setValue('input#password', [password, 'Enter']);

                    detectPasswordChange();

                    browser.waitUntil(function () {
                        return !isLoginUrl();
                    });
                }
            }
        };

        browser.addCommand('splunkLogin', function () {
            var retries = 3;
            do {
                try {
                    login();
                    retries = 0;
                } catch (e) {
                    browser.refresh();
                    retries -= 1;
                }
            } while (retries > 0);
        });

        browser.addCommand('splunkUrl', function (target) {
            browser.url(target);
            browser.splunkLogin();
        });
    });

    return config;
}; /* global browser */