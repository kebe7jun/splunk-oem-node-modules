'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _reporter = require('./reporter.junit');

var _reporter2 = _interopRequireDefault(_reporter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (config, incomingSettings) {
    var settings = _extends({
        sauce: true,
        customJUnit: false, // deprecated, replaced by failOnEmptySuite
        failOnEmptySuite: false
    }, incomingSettings);

    config.reporters = config.reporters || [];
    config.reporterOptions = config.reporterOptions || [];

    config.reporters.push(_reporter2.default);
    config.reporterOptions.junit = {
        outputDir: 'test-reports',
        outputFileFormat: function outputFileFormat(options) {
            return 'func-results-' + options.capabilities + '-' + options.cid + '.xml';
        }
    };
    config.reporterOptions.junit.tmpDir = config.suiOutputPath;
    config.reporterOptions.junit.custom = {
        sauce: settings.sauce,
        failOnEmptySuite: settings.customJUnit || settings.failOnEmptySuite
    };

    return config;
};