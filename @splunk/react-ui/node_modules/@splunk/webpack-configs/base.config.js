'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var DEBUG = process.env.NODE_ENV !== 'production';

exports.default = {
    node: {
        __filename: true
    },
    module: {
        rules: [
        // This help to fix issue SPL-144317 and SUI-1042. Leaks lodash out to global
        // The issue caused by https://github.com/lodash/lodash/issues/1798
        // So, opting out of AMD parsing for lodash
        {
            parser: { amd: false },
            include: /lodash/,
            // This is to fix SUI-1212, it does no harm to other scenarios but helps
            // isolating lodash when it's used with dashboard extension
            use: ['imports-loader?define=>false']
        }, {
            test: /\.jsx?$/,
            exclude: /(node_modules|bower_components)/,
            use: [DEBUG ? 'babel-loader?cacheDirectory' : 'babel-loader']
        }, {
            test: /\.css$/,
            use: ['style-loader', DEBUG ? '@splunk/css-loader?debug' : '@splunk/css-loader']
        }, {
            test: /\.txt$/,
            use: ['raw-loader']
        }, {
            test: /\.(png|jpg|jpeg|gif|svg|woff|woff2)$/,
            use: [{
                loader: 'url-loader',
                options: {
                    name: DEBUG ? '[path][name].[ext]?[hash]' : '[hash].[ext]',
                    limit: 100000
                }
            }]
        }, {
            test: /\.(eot|ttf|wav|mp3)$/,
            use: [{
                loader: 'file-loader',
                options: {
                    name: DEBUG ? '[path][name].[ext]?[hash]' : '[hash].[ext]'
                }
            }]
        }]
    },

    resolve: {
        extensions: ['.js', '.jsx']
    },

    cache: DEBUG,

    output: {
        filename: DEBUG ? '[name].js?[chunkhash]' : '[name].[chunkhash].js',
        chunkFilename: DEBUG ? '[name].[id].js?[chunkhash]' : '[name].[id].[chunkhash].js'
    }
};